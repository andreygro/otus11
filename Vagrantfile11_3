# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

config.vm.provision "shell", inline: <<-SHELL

#
# 8-3 Unit-file service apache start with @template, a few instants 
#
# Install apache
yum install -y httpd
# Create admin unit-file
cp /usr/lib/systemd/system/httpd.service /etc/systemd/system/httpd@.service
#
# Create template unit file  - httpd
sed -i.orig s@sysconfig/httpd@sysconfig/httpd-%I@ /etc/systemd/system/httpd@.service
#
# 2 file with parameters for start web-server with templates @
cp /etc/sysconfig/httpd /etc/sysconfig/httpd-first
cp /etc/sysconfig/httpd /etc/sysconfig/httpd-second
#
# -f option is  path to config file     cat /etc/sysconfig/httpd-first
# Edit, sed found #OPTIONS= edit to OPTIONS="-f conf/first.conf", ' for quotes "
sed -i.orig 's@^#OPTIONS=@OPTIONS="-f conf/first.conf"@' /etc/sysconfig/httpd-first
# cat /etc/sysconfig/httpd-second
sed -i.orig 's@^#OPTIONS=@OPTIONS="-f conf/second.conf"@' /etc/sysconfig/httpd-second
#
# Create 2 httpd config files for templates @  it was first.conf and second.conf
# cat /etc/httpd/conf/first.conf   
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/first.conf
# cat /etc/httpd/conf/second.conf
cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/second.conf
#
# Change PidFile and Listen port
# sed edit Listen 80 to Listen 8009
sed -i.orig "s/^Listen 80/Listen 8009/" /etc/httpd/conf/first.conf
# add to and config file PidFile 
echo 'PidFile /var/run/httpd-first.pid' >> /etc/httpd/conf/first.conf
#
# sed edit Listen 80 to Listen 8008
sed -i.orig "s/^Listen 80/Listen 8008/" /etc/httpd/conf/second.conf
# add to and config file PidFile 
echo 'PidFile /var/run/httpd-second.pid' >> /etc/httpd/conf/second.conf
#
# Start configuration with @second template
systemctl start httpd@second
# Show ports - httpd
ss -tnulp | grep httpd
# Start configuration with @first template
systemctl start httpd@first
# Show ports - httpd
ss -tnulp | grep httpd
#
# End
          SHELL

end
